"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResponseDataTypeMismatchError = exports.AbortedHttpError = exports.TimeoutHttpError = exports.ServerHttpError = exports.ClientHttpError = exports.HttpError = void 0;

var _betterCustomError = _interopRequireDefault(require("better-custom-error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Base/generic error type
 *
 * @class Error
 * @property {string} message - error message
 * @property {Object} details - error details
 * @property {string} stack - stack trace
 */

/**
 * Non-success response custom error
 *
 * @class HttpError
 * @extends Error
 */
const HttpError = (0, _betterCustomError.default)("HttpError");
/**
 * Response 4xx error
 *
 * @class ClientHttpError
 * @extends HttpError
 * @extends Error
 */

exports.HttpError = HttpError;
const ClientHttpError = (0, _betterCustomError.default)("ClientHttpError", HttpError);
/**
 * Response 5xx error
 *
 * @class ServerHttpError
 * @extends HttpError
 * @extends Error
 */

exports.ClientHttpError = ClientHttpError;
const ServerHttpError = (0, _betterCustomError.default)("ServerHttpError", HttpError);
/**
 * Response timeout error
 *
 * @class TimeoutHttpError
 * @extends ServerHttpError
 * @extends HttpError
 * @extends Error
 */

exports.ServerHttpError = ServerHttpError;
const TimeoutHttpError = (0, _betterCustomError.default)("TimeoutHttpError", ServerHttpError);
/**
 * Response aborted error
 *
 * @class AbortedHttpError
 * @extends ServerHttpError
 * @extends HttpError
 * @extends Error
 */

exports.TimeoutHttpError = TimeoutHttpError;
const AbortedHttpError = (0, _betterCustomError.default)("AbortedHttpError", ClientHttpError);
/**
 * Response data type was different than expected
 *
 * @class ResponseDataTypeMismatchError
 * @extends Error
 */

exports.AbortedHttpError = AbortedHttpError;
const ResponseDataTypeMismatchError = (0, _betterCustomError.default)("ResponseDataTypeMismatchError");
exports.ResponseDataTypeMismatchError = ResponseDataTypeMismatchError;